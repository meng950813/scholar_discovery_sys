# coding=utf-8
import pickle
import networkx as nx
from utils.config import root
def makeIndex(code,k):
    '''
    teacherRank类型是字典 {23701: 0.6317027803160125, 23705: 0.6330408384837418, 23709: 0.6338644879146824, 23711: 0.6341609977357398, 23715: 0.6361971683719443, 23717: 0.6351147423007671, 23721: 0.7171912411017286, 23722: 0.8079610172636402, 23725: 0.7234916841237825, 23730: 0.633902886790162, 23741: 0.6314257919486462, 23745: 0.6259781614001331, 23773: 0.6710967782883293, 23790: 0.6852492586406149, 40164: 0.6336933541407074, 40467: 0.7116501983142621, 40563: 0.9352986566762495, 40672: 0.9408708763862299, 40702: 0.7890915679753838, 40773: 0.6355486061999972, 41067: 0.634066739843359, 41091: 0.7543472698275412, 41181: 0.6323507809404658, 41218: 0.6834929068630519, 41270: 0.6353131261652556, 41305: 0.6679069343041939, 41317: 0.880063179682729, 41376: 0.6264987076966344, 42286: 0.8042065871968813, 42389: 0.8497426976064111, 42508: 0.679621972283683, 42548: 0.6342323556170916, 42572: 0.7164294908943761, 42619: 0.7051994306657492, 42712: 0.9875221924299069, 42786: 0.7584500515624023, 42960: 0.6339920551008156, 42962: 0.8541776770114414, 43031: 0.8608429391762427, 43042: 0.7186349836343017, 43075: 0.7209996247437404, 43478: 0.6289029571152994, 43710: 0.6184429381550234, 43865: 0.8873089463747293, 43889: 0.6328351095468476, 44039: 0.6338948812227109, 44137: 0.9695590818276998, 44554: 0.7171236875190972, 44778: 0.7794332842913824, 44803: 1.0220899883141834, 44867: 0.6836645672425127, 44940: 0.9307191992178112, 44984: 0.7543276780857786, 44987: 0.9110949876453714, 45227: 0.7188883698413187, 45328: 0.8053798517598484, 45482: 0.7097419825300573, 45606: 0.6339168052981128, 45705: 0.7894769322464082, 45861: 0.8806390424900412, 45900: 0.991083401448837, 45914: 0.6310454477045071, 46012: 0.683199919828438, 46104: 0.848588528264881, 46187: 0.6362965069319374, 46430: 0.8721770727228615, 46545: 0.6805281904540548, 46549: 0.6359689023315696, 46575: 1.0684131568128294, 46723: 0.8332961956449282, 46770: 0.6843919916118271, 46863: 0.809699099717515, 46866: 0.6318174474145015, 47236: 0.7499220783700826, 47281: 0.6829440361732799, 47307: 0.9125578702255033, 47308: 0.6341248556394308, 47435: 0.6826021822446153, 47962: 0.930411180750718, 47969: 0.6306388211351929, 48006: 0.725191180788577, 48054: 0.6334646583736239, 48080: 0.6777993365508691, 48384: 0.7805273813994389, 48387: 0.8984142356613997, 48450: 0.7806163509087577, 48464: 0.6335226637100457, 48500: 0.6347029441667148, 48622: 0.7529499994540787, 48691: 1.0123618045291929, 48910: 0.7223266817711628, 48942: 0.6324597058657934, 49092: 0.6343400313376104, 49347: 0.7193020125333666, 49631: 0.6313419961206028, 49908: 0.6367001321193216, 49965: 0.6323789339104107, 50035: 0.7705081424773522, 50063: 0.6327420245498541, 50238: 0.747425094712948, 50384: 0.713626238884743, 50475: 0.9581412926691847, 50565: 0.7937835994239619, 50689: 0.7818054314850598, 50747: 0.9555960105271031, 50800: 1.0564571728510488, 50866: 0.7193013829236498, 50867: 1.0535005869522829, 50883: 0.7894123508055485, 51012: 0.7785229528728383, 51042: 0.934388059261378, 51095: 0.6334156860867844, 51170: 0.6361893269569638, 51225: 0.6363277594411911, 51272: 0.6333157172464307, 51278: 0.7451197325992324, 51291: 0.9584505013776246, 51336: 0.7232681093128891, 51353: 0.7780225298232981, 51416: 0.7898145650968038, 51534: 0.6834439013347222, 51568: 0.8711243693965567, 51665: 0.8329350931040873, 51810: 0.7761943281461183, 51827: 1.0577899394359866, 51838: 0.629843101509643, 51876: 0.7142888396202254, 51908: 0.9602374765816926, 51963: 0.8311911412672897, 52047: 0.6702559876282304, 52057: 0.8160030751063918, 52094: 0.6837030796322698, 52166: 0.8292895565880705, 52169: 0.8336391810269572, 52172: 0.7775992494311404, 52188: 0.8354068106727387, 52194: 0.7597864637318313, 52197: 0.7827823442860549, 52207: 0.6788434584144796, 52232: 0.6832983037254716, 52240: 0.8861184996885481, 52280: 0.6342833995558992, 52334: 0.7571909676582032, 52505: 0.6345052094184184, 52506: 0.636396588070931, 52518: 0.6166154305154935, 52649: 0.8295585904313463, 52661: 0.7439050540152183, 52689: 0.850306532027822, 52702: 0.8360917513287094, 52737: 0.8723081952509211, 52777: 0.7227676994447423, 52797: 0.9415318564258517, 52812: 1.0301337003146314, 52844: 0.7809194359453331, 52851: 0.6879045556913589, 52883: 0.867336801381261, 52915: 0.7943327221627621, 52930: 0.7535995995864544, 52971: 0.7576094924706439, 53018: 1.0047390762280863, 53046: 0.767667177475414, 53061: 0.7992946115338427, 53073: 1.0087706957512785, 53121: 0.6760048857684768, 53169: 0.8329153520415724, 53176: 0.7313105703663634, 53203: 0.6827859781283554, 53236: 1.009597050141342, 53255: 0.6302583074056287, 53422: 0.636389517143138, 53452: 0.7236872780408464, 53629: 0.7821153638748684, 53647: 1.0131503676951783, 53649: 0.8270459217469575, 53691: 0.6337502490572658, 53696: 0.7804216392219849, 53817: 0.722826362141654, 53839: 0.6343013120089288, 53876: 0.8944562693897322, 54031: 0.7181652977396027, 54610: 0.6329344955799638, 54637: 0.6819739506279364, 54646: 0.7246283259245022, 54659: 1.0200650859651175, 54734: 0.6360248079807401, 54745: 0.9035858792978866, 54821: 0.8836773499263249, 54954: 0.6321861223565168, 54956: 0.7857946365241205, 55067: 0.8051016710013997, 55127: 0.6348697260420442, 55200: 0.6778204168124279, 55231: 0.6366285596574278, 55342: 0.6858343106730759, 55446: 0.6361485649513252, 55448: 0.7521000451816755, 55476: 0.6843634607610118, 55580: 0.89087813474721, 55598: 0.6745264091938734, 55638: 0.6790931235023498, 55656: 0.6858014278255027, 55882: 0.86941203371743, 55906: 0.6705344507719193, 55999: 0.7232773437511608, 56188: 1.0377890069568543, 56235: 0.6334252605307271, 56273: 0.7256744998806155, 56529: 0.6329730768248828, 56659: 0.631387643405517, 56779: 0.7141868179307798, 56792: 0.6811679741528164, 56826: 0.6372725711629995, 56832: 0.9003952842450823, 56928: 0.8230708194358414, 57015: 0.6832718267144264, 57020: 0.6362965025109828, 57065: 0.63546317725736, 57214: 0.806625931066713, 57255: 0.7821008006862487, 57338: 0.7899131260097592, 57526: 0.7562203733463086, 57572: 0.9544603138244556, 57577: 1.0923364204219577, 57600: 0.6332504110813839, 57641: 0.8268815679864181, 57666: 0.8694918692109499, 57740: 0.6333915753528788, 57897: 0.8091898556134158, 57958: 0.9686450529251858, 57983: 0.6358969398205584, 58120: 0.6303862567403933, 58162: 0.6318559598709564, 58202: 1.0044325118453297, 58263: 0.7174593561459328, 58269: 0.8682615184037112, 58324: 0.9390243395539248, 58464: 0.6836213984313191, 58570: 0.8307801430569506, 58594: 0.6838631537259799, 58615: 0.8378793876689811, 58899: 0.6353305223741444, 58938: 0.7854029850285873, 59043: 0.6349782584115183, 59049: 0.6855282215594529, 59102: 0.9145644507269088, 59120: 0.6357252811820447, 59125: 0.6291080775567426, 59349: 0.7571126958169292, 59368: 0.8814370486970557, 59457: 0.6855268624500545, 59574: 0.7149125984208655, 59585: 0.7935939822170446, 59620: 0.8055637888523165, 59672: 0.7293701500603844, 59760: 0.6364973250171516, 59817: 0.6360941154374875, 60029: 1.012299496412376, 60095: 0.7452422260481495, 60097: 0.806181395553965, 60161: 0.995185935814239, 60386: 0.683038993889248, 60400: 0.9864429324439166, 60510: 0.7476717629021373, 60512: 0.6320187851465648, 60533: 0.9971198293592036, 60644: 0.951667725745782, 60661: 0.6343547067099796, 60674: 0.6320000415135126, 60820: 0.6370544155972989, 60851: 0.8153449469484548, 61050: 0.6796587089522009, 61112: 0.6371401390984597, 61144: 0.6364630791319198, 61150: 0.6287117548174911, 61187: 0.6301008554773041, 61274: 0.723239185745862, 61308: 0.6363276867975093, 61337: 0.7491084896818381, 61359: 0.7564674971019286, 61530: 0.8518615646277431, 61594: 0.723911057167069, 61601: 0.6306865866465363, 61618: 0.9048898425948564, 61746: 0.8566479514892338, 61939: 0.7214064272437329, 62211: 0.7271436037327601, 62271: 0.8905876374155428, 62282: 0.7999180776891541, 62322: 0.7414218704685843, 62366: 0.8106574742139135, 62422: 1.035008509582599, 62469: 0.8995764763567338, 62570: 0.6357252748414768, 62665: 0.8709357937584018, 62681: 0.8669042792646882, 62682: 0.723268250347495, 62690: 1.043220940132378, 62726: 0.8291050173616612, 62777: 0.7222036665707448, 62818: 0.7036219371450401, 62819: 0.9209228597019172, 62983: 0.633876451253241, 63013: 0.7115406479618344, 63166: 0.7747365896569645, 70525: 0.6751551784177323, 70528: 0.6712496155222344, 74371: 0.6310549242124325, 74372: 0.8060502804423706, 74426: 0.952498998575781, 74443: 0.9246531485669456, 74444: 0.6338336889651314, 74455: 0.7059728397391752, 74456: 0.6845397597196073, 74459: 0.6793932054456626, 74463: 0.7833154397631125, 75072: 0.6373375325766367, 75073: 0.63750939111834, 75075: 0.9452316010844923, 75087: 0.8859756140010582, 75094: 0.7137687495095255, 75109: 0.8364140136863818, 75111: 0.6766885791122887, 75122: 0.9400611847118319, 75162: 0.6313624679643047, 75307: 0.7431352681191598, 75329: 0.6345082402241894, 75345: 0.9179823988332334, 75360: 0.6837540142129478, 75364: 0.6309778930069284, 75555: 0.8338397702850445, 75625: 0.9079597967166805, 75628: 0.9687390382568037, 75632: 0.9096632423226447, 75652: 0.7463773074120219, 75771: 0.6819181388348117, 76198: 0.7174569750825478, 81484: 0.7000219423846942, 81486: 0.6326541607698343, 81506: 0.8510039330069026, 81513: 0.7764229744788536, 81515: 0.6802482729033376, 81516: 0.6791969081281825, 81517: 0.7026302503129394, 91489: 0.9542881932313623, 91490: 0.6800203799038331, 100319: 0.6269415655990518, 100322: 0.7240002727934027, 100323: 0.6382533465826465, 100335: 0.6739691372637748, 100346: 0.7857977351333103, 100352: 0.6360249162353135, 100355: 0.9160836843280988, 102587: 1.0085887432310319, 102588: 1.0539157677065087, 102589: 1.0611205661605732, 102590: 0.9467215830158218, 102591: 0.973597078034513, 102592: 0.8863080278183443, 102593: 0.9913043584120568, 102594: 1.0139424947981919, 102596: 1.0061545018418272, 102599: 1.0592828350007997, 102600: 1.01419387980948, 102601: 0.9438298737275204, 102656: 0.6795346065885586, 102657: 0.8844594036977129, 102658: 0.7799576784553037, 102659: 0.866463105146495, 102660: 0.7248893890216453, 102662: 0.7224183727796741, 102663: 0.7536065479503573, 102664: 0.6869936876968658, 102665: 0.8726670172490878, 102666: 0.8666388982290443, 102670: 0.7246094999115961, 102671: 0.6822376529858108, 104557: 0.8557563281895955, 104558: 0.7224096462634634, 104559: 0.7917627374065299, 104560: 1.018583159258912, 104561: 0.8864658690477291, 104562: 0.7244798937684058, 104565: 0.8212491702136827, 104566: 0.6320541161215365, 104621: 0.8696642376097274, 104622: 0.9295078084185295, 104623: 0.8600719384213865, 104624: 0.7442196683269793, 104625: 0.9050019837673852, 105002: 1.0012272519371335, 105003: 0.8734189227347495, 105005: 1.0609155899579692, 105006: 0.7778288867060386, 105007: 0.9205608904634703, 105008: 0.8777228565223899, 106156: 0.6851212927232817, 106631: 0.6797111728257152, 110866: 0.7425973600390064, 110868: 0.7238601340605705, 111183: 0.930217028290766, 111184: 0.8179987614518229, 111185: 1.0399779707445405, 111228: 0.7863046865668952, 111229: 0.8817997298221254, 111230: 0.8105446164980037, 111231: 0.9678730412396275, 111232: 0.8103642409829909, 111233: 0.6702562210609571, 111234: 0.8925880438601737, 111235: 0.9795960460752006, 111236: 0.9212591299551045, 111237: 0.8788203453247143, 111238: 1.0126447966573393, 111240: 0.7814517825584539, 111241: 0.7149394242044572, 111242: 0.755860213669803, 111248: 0.7051758340347796, 111249: 0.9344219123086004, 111250: 0.7586570582222005, 111251: 1.0577900888589784, 111252: 0.8984143806084651, 111254: 0.9871403535659153, 111257: 0.7530637431362436, 111258: 1.008312816642211, 111260: 0.8055624177269513, 111263: 0.6264532163961369, 111264: 0.773668039633269, 117189: 0.633726112660501, 120659: 0.883226244306463, 134140: 0.7791822298398109, 137118: 0.6362712471806811, 139478: 0.7761081799362305, 139479: 0.8178498531541951, 139482: 0.719340965696361, 139483: 0.7229319629101344, 139485: 0.9047934479748434, 139486: 0.8519601720245743, 139488: 0.8987615998219562, 139489: 0.7367640502704231, 139490: 0.7669412395114833, 139491: 0.6341401302154543, 139492: 0.7167593286183216, 139495: 0.6339740134102172, 139496: 1.0085306548894766, 139497: 0.7561802196209761, 139498: 0.770397264445781, 139499: 1.0178427615090904, 139502: 0.7709830359482688, 139503: 0.6180185163379596, 139504: 0.8539955921220194, 139505: 0.7421871979834831, 139506: 0.7624815538087342, 139507: 1.026860612038425, 139714: 0.9795854246701523, 139715: 0.7184822469079711, 139716: 0.8073812166803898, 139717: 0.9087811715497291, 139718: 0.919301431578363, 139719: 0.818414771018595, 139722: 0.719244509084432, 139724: 0.7415745751054559, 139725: 0.6371401390984597, 139726: 0.6364492311574982, 139729: 0.7956479302708248, 139730: 0.6339832902225802, 139832: 0.9060439353435851, 139833: 0.7789239409843232, 139834: 0.790626963089622, 139835: 0.8508744972953717, 139836: 0.8797581393489051, 139838: 0.9708058508659244, 139839: 0.7516031785020991, 139840: 0.8652789097183005, 139842: 0.7455172359772593, 139844: 0.879695616458203, 139845: 0.79868124392756, 139846: 0.9645209908871493, 139848: 0.954379958075815, 139849: 0.8304143343191106, 139850: 0.8144749431476659, 139852: 0.8230599362107145, 139853: 0.7820813080930815, 139854: 1.051637430093088, 139855: 0.8595985244678941, 139856: 0.7428931778690866, 139858: 0.7759458796152311, 139859: 0.8531599029954425, 140236: 0.8121560779429959, 140786: 0.8539818798171073, 140788: 0.7560389560628039, 140789: 0.9396194544852328, 140790: 1.0390984925428, 140793: 1.0375097948637793, 142772: 0.8849891454318266, 142773: 0.6784340676000805, 142774: 0.6349019830825282, 142777: 0.6783472594755066, 142940: 0.7737969588666243, 142941: 0.8039327462620324, 142942: 0.9523313950968467, 142944: 0.8968123136218088, 142945: 0.7703744800758647, 143254: 0.7990976558225831, 143255: 0.7660436880043913, 143258: 0.8062466130700887, 143259: 0.9034587519643964, 143261: 0.8046750431914127, 143264: 0.8682743686586715, 143265: 0.8762492973640166, 143266: 0.7536646132264069, 143267: 0.8044866276929921, 143369: 0.7797671989213106, 143370: 0.7798531680832723, 143372: 0.6790771048185991, 143373: 0.6805938011565514, 143374: 0.747327818015225, 143376: 0.9258313106070162, 143377: 0.8544189279943072, 143378: 0.9263969797859346, 143379: 0.9510943569683159, 143381: 0.8730806881359905, 143382: 1.028612493022739, 143383: 0.8672045285333209, 143474: 0.7167582131309509, 143476: 0.9173473408916399, 143477: 0.7609310350438843, 143478: 0.8747425762176191, 143479: 0.8039822836228586, 143491: 1.0338842417757932, 143492: 0.853575211109642, 143493: 0.6346748912960275, 143496: 0.7186205631019316, 143497: 0.6826865193638878, 143498: 0.9895799935376787, 143499: 0.9960376386819312, 143500: 0.950560251754673, 143502: 0.6813526323464156, 143551: 0.7851407228841172, 143552: 0.9232669228874096, 143554: 0.632671031128174, 143556: 1.005600079530188, 143558: 0.6808373007997569, 143560: 0.9965607899551723, 146645: 0.8418428961515093, 146646: 0.9230320538774658, 146647: 0.724319371052743, 146648: 0.6829441138216149, 146653: 0.960788565332622, 146655: 0.8772410470973182, 146657: 0.6346998793846903, 146658: 0.8526448414229846, 146659: 0.8405827754015143, 149279: 0.6336143212787867, 149490: 1.0441530454791461, 149491: 0.7250062477293397, 149493: 0.6301008530063308, 149923: 0.634672897755949, 149925: 0.7200246887867966, 149926: 0.6850808460751237}
    :param code:
    :param k:
    :return:
    '''
    path = root+'/' + code + '/k' + str(k)
    teacherTopic=pickle.load(open(path + '/teacherTopic', 'rb'))
    G = nx.Graph()
    exp_to_topic = []
    topic_top_exp = []
    #num是teacher总数
    num=len(teacherTopic)
    #teacherTopic  {teacher1: {topic1: p1, topic2: p2}, ...}
    #teacher是teacher_id
    print(len(teacherTopic))
    for teacher in teacherTopic:
        #topic是topic_id
        for topic in teacherTopic[teacher]:
            #exp_to_topic [(teacher_id1,"topic_"+str(topic_id),p)]
            exp_to_topic.append((teacher,"topic_"+str(topic), teacherTopic[teacher][topic]))
            topic_top_exp.append(("topic_"+str(topic),teacher, teacherTopic[teacher][topic]*10/num))
    G.add_weighted_edges_from(exp_to_topic)
    G.add_weighted_edges_from(topic_top_exp)
    print("computer")

    layout = nx.spring_layout(G)
    nx.draw_networkx(G)
    pr = nx.pagerank(G, alpha=0.85)

    dmin = min(pr.items(), key=lambda x: x[1])[1]*(num+k)
    dmax = max(pr.items(), key=lambda x: x[1])[1]*(num+k)
    nx.draw_networkx(G, pos=layout, node_size=[x * 6000 for x in pr.values()], node_color='m', with_labels=True)
    teacherRank={}
    for node, pageRankValue in pr.items():
        if type(node)==str:
            continue
        teacherRank[node]=(pageRankValue *(num+k)+1)/2
    print(max([teacherRank[t] for t in teacherRank]))
    print(min([teacherRank[t] for t in teacherRank]))
    pickle.dump(teacherRank,open(path + '/teacherRank', 'wb'))

def makeSchoolIndex(code, k):
    path = root+'/' + code + '/k' + str(k)
    schoolTopic = pickle.load(open(path + '/schoolTopic', 'rb'))
    G = nx.Graph()
    exp_to_topic = []
    topic_top_exp = []
    num = len(schoolTopic)
    for school in schoolTopic:
        for topic in schoolTopic[school]:
            exp_to_topic.append((school, "topic_" + str(topic), schoolTopic[school][topic]))
            topic_top_exp.append(("topic_" + str(topic), school, schoolTopic[school][topic] * 10 / num))
    G.add_weighted_edges_from(exp_to_topic)
    G.add_weighted_edges_from(topic_top_exp)
    print("computer")
    layout = nx.spring_layout(G)
    nx.draw_networkx(G)
    pr = nx.pagerank(G, alpha=0.85)

    dmin = min(pr.items(), key=lambda x: x[1])[1]
    dmax = max(pr.items(), key=lambda x: x[1])[1]
    nx.draw_networkx(G, pos=layout, node_size=[x * 6000 for x in pr.values()], node_color='m', with_labels=True)
    schoolRank = {}
    for node, pageRankValue in pr.items():
        if type(node) == str:
            continue
        schoolRank[node] =(pageRankValue *(num+k)+1)/2

    pickle.dump(schoolRank, open(path + '/schoolRank', 'wb'))
if __name__ == '__main__':
    # subject = [{"code": '01', "k": 46},{"code": '02', "k": 98},{"code": '03', "k": 98},
    #            {"code": '04', "k": 88},{"code": '05', "k": 98},{"code": '06', "k": 28},
    #            {"code": '07', "k": 54}, {"code": '0701', "k": 64}, {"code": '0702', "k": 30},
    #            {"code": '0703', "k": 52}, {"code": '0705', "k": 16}, {"code": '0706', "k": 12},
    #            {"code": '0707', "k": 14}, {"code": '0709', "k": 98}, {"code": '0710', "k": 98},
    #            {"code": '0712', "k": 10}, {"code": '08', "k":50}, {"code": '0801', "k": 26},
    #            {"code": '0802', "k": 98}, {"code": '0803', "k": 14}, {"code": '0804', "k":12},
    #            {"code": '0805', "k": 98}, {"code": '0806', "k":12}, {"code": '0807', "k": 38},
    #            {"code": '0808', "k": 98}, {"code": '0809', "k": 52}, {"code": '0810', "k": 98},
    #            {"code": '0811', "k": 22}, {"code": '0812', "k": 72}, {"code": '0813', "k": 30},
    #            {"code": '0814', "k": 68}, {"code": '0815', "k":14}, {"code": '0816', "k": 14},
    #            {"code": '0817', "k":98}, {"code": '0818', "k": 14}, {"code": '0819', "k": 18},
    #            {"code": '0820', "k": 18}, {"code": '0821', "k": 18}, {"code": '0823', "k": 24},
    #            {"code": '0824', "k": 14}, {"code": '0825', "k": 26}, {"code": '0826', "k": 10},
    #            {"code": '0827', "k": 12}, {"code": '0828', "k": 36}, {"code": '0829', "k": 14},
    #            {"code": '0830', "k": 82}, {"code": '0831', "k": 16}, {"code": '0832', "k": 28},
    #            {"code": '09', "k": 74}, {"code": '10', "k": 98},{"code": '11', "k": 14},
    #            {"code": '12', "k": 98}]
    # subject = [{"code": '12', "k": 98}]
    subject = [ {"code": '0804', "k": 12}, {"code": '0823', "k": 12},
               {"code": '0828', "k": 10},{"code": '0807', "k": 14},{"code": '0802', "k": 10},{"code": '0830', "k": 18}]
    for sub in subject:
        print(sub)
        makeIndex(sub['code'],sub['k'])
        makeSchoolIndex(sub['code'], sub['k'])